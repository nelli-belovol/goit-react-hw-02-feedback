{"version":3,"sources":["component/Feedback/Statistics.jsx","component/Feedback/FeedbackOptions.jsx","component/Feedback/Section.jsx","component/Feedback/Notification.jsx","component/Feedback/Feedback.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","style","display","flexDirection","shortid","generate","FeedbackOptions","options","onLeaveFeedback","className","onClick","Object","keys","map","name","type","Section","title","children","Notification","message","Feedback","state","handleButton","e","target","textContent","setState","prevState","countPositiveFeedbackPercentage","percent","countTotalFeedback","Math","floor","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAGaA,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,gCACE,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAA9C,UACE,sCACO,+BAAOP,MADNQ,IAAQC,YAGhB,yCACU,+BAAOR,MADTO,IAAQC,YAGhB,qCACM,+BAAOP,MADLM,IAAQC,eAIlB,uCACQ,+BAAON,OAEf,mDAEE,iCAAOC,EAAP,cCzBKM,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,qBAAKC,UAAU,UAAUC,QAASF,EAAlC,SACGG,OAAOC,KAAKL,GAASM,KAAI,SAAAC,GACxB,OACE,wBAAiCC,KAAK,SAAtC,SACGD,GADUV,IAAQC,kBCNlBW,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,qCACE,6BAAKD,IACJC,MCJMC,EAAe,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASF,EAAe,EAAfA,SACtC,OACE,qCACE,6BAAKE,IACJF,MCCcG,E,4MACnBC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,aAAe,SAAAC,GAEb,OADmBA,EAAXC,OACOC,aACb,IAAK,OACH,EAAKC,UAAS,SAAAC,GACZ,MAAO,CAAEhC,KAAMgC,EAAUhC,KAAO,MAElC,MACF,IAAK,UACH,EAAK+B,UAAS,SAAAC,GAAS,MAAK,CAAE/B,QAAS+B,EAAU/B,QAAU,MAC3D,MACF,IAAK,MACH,EAAK8B,UAAS,SAAAC,GAAS,MAAK,CAAE9B,IAAK8B,EAAU9B,IAAM,Q,EAYzD+B,gCAAkC,WAChC,IAAQjC,EAAS,EAAK0B,MAAd1B,KACJkC,EAAU,EACd,OAAkC,IAA9B,EAAKC,qBACWC,KAAKC,MAAOrC,EAAO,EAAKmC,qBAAwB,KAE7DD,G,wDAXT,WACE,MAA+BI,KAAKZ,MACpC,OADA,EAAQ1B,KAAR,EAAcC,QAAd,EAAuBC,M,oBAazB,WACE,OACE,qCACE,cAAC,EAAD,CAASmB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAAS2B,KAAKZ,MACdd,gBAAiB0B,KAAKX,iBAI1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACiC,IAA9BiB,KAAKH,qBACJ,cAAC,EAAD,CACEnC,KAAMsC,KAAKZ,MAAM1B,KACjBC,QAASqC,KAAKZ,MAAMzB,QACpBC,IAAKoC,KAAKZ,MAAMxB,IAChBC,MAAOmC,KAAKH,qBACZ/B,mBAAoBkC,KAAKL,oCAG3B,cAAC,EAAD,CAAcT,QAAQ,+B,GA5DIe,aCJvB,SAASC,IACtB,OACE,mCACE,cAAC,EAAD,MCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7401451f.chunk.js","sourcesContent":["import React from 'react';\r\nimport shortid from 'shortid';\r\n\r\nexport const Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <p key={shortid.generate()}>\r\n          Good:<span>{good}</span>\r\n        </p>\r\n        <p key={shortid.generate()}>\r\n          Neutral:<span>{neutral}</span>\r\n        </p>\r\n        <p key={shortid.generate()}>\r\n          Bad:<span>{bad}</span>\r\n        </p>\r\n      </div>\r\n      <p>\r\n        Total:<span>{total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback:\r\n        <span>{positivePercentage}%</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className=\"buttons\" onClick={onLeaveFeedback}>\r\n      {Object.keys(options).map(name => {\r\n        return (\r\n          <button key={shortid.generate()} type=\"button\">\r\n            {name}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Notification = ({ message, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{message}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport { Statistics } from './Statistics.jsx';\r\nimport { FeedbackOptions } from './FeedbackOptions.jsx';\r\nimport { Section } from './Section.jsx';\r\nimport { Notification } from './Notification.jsx';\r\n\r\nexport default class Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleButton = e => {\r\n    const { target } = e; // сохраняем в переменную, если нужно при ассинхронном запросе достучаться до таргета (иначе null)\r\n    switch (target.textContent) {\r\n      case 'good':\r\n        this.setState(prevState => {\r\n          return { good: prevState.good + 1 };\r\n        });\r\n        break;\r\n      case 'neutral':\r\n        this.setState(prevState => ({ neutral: prevState.neutral + 1 }));\r\n        break;\r\n      case 'bad':\r\n        this.setState(prevState => ({ bad: prevState.bad + 1 }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    let percent = 0;\r\n    if (this.countTotalFeedback() !== 0) {\r\n      return (percent = Math.floor((good / this.countTotalFeedback()) * 100));\r\n    }\r\n    return percent;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.handleButton}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() !== 0 ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import './App.css';\nimport Feedback from './component/Feedback/Feedback';\n\nexport default function App() {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}